-- AUTOGENERATED BY storj.io/dbx
-- DO NOT EDIT
CREATE SEQUENCE as_pk OPTIONS (sequence_kind='bit_reversed_positive') ;
CREATE TABLE as (
	pk INT64 NOT NULL DEFAULT (GET_NEXT_SEQUENCE_VALUE(SEQUENCE as_pk)),
	ctime TIMESTAMP NOT NULL,
	mtime TIMESTAMP NOT NULL,
	id STRING(MAX) NOT NULL,
	name STRING(MAX) NOT NULL
) PRIMARY KEY ( pk ) ;
CREATE UNIQUE INDEX index_as_id ON as (id) ;
CREATE UNIQUE INDEX index_as_name ON as (name) ;
CREATE SEQUENCE bs_pk OPTIONS (sequence_kind='bit_reversed_positive') ;
CREATE TABLE bs (
	pk INT64 NOT NULL DEFAULT (GET_NEXT_SEQUENCE_VALUE(SEQUENCE bs_pk)),
	id STRING(MAX) NOT NULL,
	data STRING(MAX) NOT NULL
) PRIMARY KEY ( pk ) ;
CREATE UNIQUE INDEX index_bs_id ON bs (id) ;
CREATE SEQUENCE foos_id OPTIONS (sequence_kind='bit_reversed_positive') ;
CREATE TABLE foos (
	id INT64 NOT NULL DEFAULT (GET_NEXT_SEQUENCE_VALUE(SEQUENCE foos_id)),
	int INT64 NOT NULL,
	int64 INT64 NOT NULL,
	uint INT64 NOT NULL,
	uint64 INT64 NOT NULL,
	float FLOAT32 NOT NULL,
	float64 FLOAT64 NOT NULL,
	string STRING(MAX) NOT NULL,
	blob BYTES(MAX) NOT NULL,
	timestamp TIMESTAMP NOT NULL,
	utimestamp TIMESTAMP NOT NULL,
	bool BOOL NOT NULL,
	date DATE NOT NULL,
	json JSON NOT NULL,
	null_int INT64,
	null_int64 INT64,
	null_uint INT64,
	null_uint64 INT64,
	null_float FLOAT32,
	null_float64 FLOAT64,
	null_string STRING(MAX),
	null_blob BYTES(MAX),
	null_timestamp TIMESTAMP,
	null_utimestamp TIMESTAMP,
	null_bool BOOL,
	null_date DATE,
	null_json JSON
) PRIMARY KEY ( id ) ;
CREATE TABLE a_bs (
	b_pk INT64 NOT NULL,
	a_pk INT64 NOT NULL,
	CONSTRAINT a_bs_b_pk_fkey FOREIGN KEY (b_pk) REFERENCES bs (pk) ON DELETE CASCADE ,
	CONSTRAINT a_bs_a_pk_fkey FOREIGN KEY (a_pk) REFERENCES as (pk) ON DELETE CASCADE 
) PRIMARY KEY ( b_pk, a_pk ) ;
CREATE SEQUENCE cs_pk OPTIONS (sequence_kind='bit_reversed_positive') ;
CREATE TABLE cs (
	pk INT64 NOT NULL DEFAULT (GET_NEXT_SEQUENCE_VALUE(SEQUENCE cs_pk)),
	id STRING(MAX) NOT NULL,
	b_pk INT64 NOT NULL,
	CONSTRAINT cs_b_pk_fkey FOREIGN KEY (b_pk) REFERENCES bs (pk) ON DELETE CASCADE 
) PRIMARY KEY ( pk ) ;
CREATE UNIQUE INDEX index_cs_id ON cs (id) ;
CREATE SEQUENCE es_pk OPTIONS (sequence_kind='bit_reversed_positive') ;
CREATE TABLE es (
	pk INT64 NOT NULL DEFAULT (GET_NEXT_SEQUENCE_VALUE(SEQUENCE es_pk)),
	id STRING(MAX) NOT NULL,
	a_id STRING(MAX) NOT NULL,
	CONSTRAINT es_a_id_fkey FOREIGN KEY (a_id) REFERENCES as (id) ON DELETE CASCADE 
) PRIMARY KEY ( pk ) ;
CREATE UNIQUE INDEX index_es_id ON es (id) ;
CREATE SEQUENCE ds_pk OPTIONS (sequence_kind='bit_reversed_positive') ;
CREATE TABLE ds (
	pk INT64 NOT NULL DEFAULT (GET_NEXT_SEQUENCE_VALUE(SEQUENCE ds_pk)),
	id STRING(MAX) NOT NULL,
	alias STRING(MAX),
	date TIMESTAMP NOT NULL,
	e_id STRING(MAX) NOT NULL,
	a_id STRING(MAX) NOT NULL,
	CONSTRAINT ds_e_id_fkey FOREIGN KEY (e_id) REFERENCES es (id),
	CONSTRAINT ds_a_id_fkey FOREIGN KEY (a_id) REFERENCES as (id) ON DELETE CASCADE 
) PRIMARY KEY ( pk ) ;
CREATE UNIQUE INDEX index_ds_id ON ds (id) ;
CREATE UNIQUE INDEX index_ds_a_id ON ds (a_id) ;
CREATE UNIQUE INDEX as_ctime_mtime_unique_index ON as ( ctime, mtime )
